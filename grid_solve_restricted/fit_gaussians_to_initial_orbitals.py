import numpy as np
import matplotlib.pyplot as plt
import numpy as np
from scipy.optimize import minimize
import numba
from numba import prange,jit
import sys
orbital_file=np.load('orbitals_converged.npz')
orbitals=orbital_file['orbitals']
grid=orbital_file['grid']
dx=grid[1]-grid[0]
orb0=orbitals[:,0]
orb1=orbitals[:,1]
orb0=orb0/np.sqrt(dx)
orb1=orb1/np.sqrt(dx)

#plt.plot(grid,orb0)
#plt.plot(grid,orb1)
#plt.show()
fit_orbital=orb0
def gauss(x,a,b,p,q,creal,cimag):
    c=creal+1j*cimag
    return c * np.exp(-(a**2+1j*b)*(x-q)**2+1j*p*(x-q))
def gaussfunc(x,params):
    ngauss=len(params)//6
    g_sum=np.zeros_like(grid,dtype=np.complex128)
    for i in prange(ngauss):
        a,b,p,q,creal,cimag=params[6*i:6*i+6]
        g=gauss(grid,a,b,p,q,creal,cimag)
        g_sum+=g
    return g_sum
def error_function(params):
    g_sum=gaussfunc(grid,params)
    error=np.sum(np.abs(g_sum-fit_orbital)**2)
    #print(list(params))
    return error
#params0=[np.float64(1.7313261474958146), np.float64(0.10821645278347743), np.float64(-1.2910941625922085), np.float64(0.20892482699888315), np.float64(0.4981681505938854), np.float64(0.0481965102828324), np.float64(0.6047831402605106), np.float64(-0.12317719386540131), np.float64(0.7310216784245945), np.float64(-1.68942967591808), np.float64(-0.11171375223711236), np.float64(-0.40018603716328593), np.float64(0.9776067505414038), np.float64(0.36088184192239114), np.float64(-1.1485330743923916), np.float64(-1.288518725300041), np.float64(-0.011337982784625984), np.float64(0.14007062103670387), np.float64(1.3259799521738802), np.float64(0.03235138015250231), np.float64(-0.11307079404800245), np.float64(-0.1784697640976569), np.float64(-0.8801885547096829), np.float64(0.7702868337593587), np.float64(1.6212742395117832), np.float64(0.9134314727321242), np.float64(-0.965041609991576), np.float64(-0.16622703353406626), np.float64(0.22562722365141613), np.float64(-0.7359915754998531), np.float64(0.6155838298452647), np.float64(-0.15709120909789054), np.float64(-0.9316561147405571), np.float64(0.16782006597033602), np.float64(-0.2730991793188743), np.float64(-0.1421833099515827), np.float64(0.48880544502010836), np.float64(0.03010690919845806), np.float64(-0.12479446485414844), np.float64(-0.708955887606784), np.float64(1.0668338921462117), np.float64(0.1796929355262306), np.float64(-0.5310253307737399), np.float64(0.18995893818503626), np.float64(0.3049767835902375), np.float64(-0.13457555587939615), np.float64(-0.22645713827542588), np.float64(-0.022577855548405898), np.float64(0.3111163819770864), np.float64(0.1193223653248176), np.float64(0.3458187984555832), np.float64(0.2728926129111036), np.float64(-0.008866439981235173), np.float64(0.00476794224166026), np.float64(-0.318045590309666), np.float64(0.14319089004215707), np.float64(0.17105067148984104), np.float64(0.47990034440714524), np.float64(0.001993210579278009), np.float64(0.006529976810865403)]

#params1=[np.float64(1.504347636646048), np.float64(-0.09873685009888035), np.float64(-0.8864151631650046), np.float64(-0.047087665981545145), np.float64(0.5698972710036039), np.float64(-0.023188811749784516), np.float64(0.5277212776205397), np.float64(-0.07897242106875263), np.float64(0.34385524876816626), np.float64(-1.5237066001187636), np.float64(-0.2694594418441665), np.float64(-0.3781879259315648), np.float64(0.7636445276525089), np.float64(0.3614410349005539), np.float64(-0.7891934869641305), np.float64(-1.4686265517738166), np.float64(-0.16903354896292494), np.float64(0.09866933326714471), np.float64(1.0775241897595835), np.float64(0.022281233216022735), np.float64(0.08098682451509065), np.float64(-0.27421421460827355), np.float64(-0.8341123518064296), np.float64(0.6577145968509026), np.float64(1.39539624401962), np.float64(0.6591364971644158), np.float64(-0.9227548558683377), np.float64(-0.5521862640405895), np.float64(0.24152544990590855), np.float64(-0.5511502858464317), np.float64(0.4498337980593697), np.float64(-0.05243736009132614), np.float64(-0.9252785387468863), np.float64(0.10993235955838533), np.float64(0.09212004589722649), np.float64(0.008625456512061678), np.float64(0.41339772413226894), np.float64(-0.024597993510213776), np.float64(-0.07868166505746746), np.float64(-0.23530631332863924), np.float64(0.7615131697151937), np.float64(0.3886260836206984), np.float64(-0.7495678443875794), np.float64(0.1172475764505243), np.float64(0.5207984719504867), np.float64(-0.7594954081774227), np.float64(-0.2926177732629864), np.float64(-0.24958043471548128), np.float64(0.24645650346690456), np.float64(-0.005706379943131093), np.float64(0.4153535840167152), np.float64(-0.14894031133835187), np.float64(0.060759323418712395), np.float64(0.05366013570885475), np.float64(-0.2754869737301915), np.float64(0.0008491768544033885), np.float64(0.32804888580807834), np.float64(0.0940476778490136), np.float64(-0.05020302538156863), np.float64(-0.22500310862866352)]
params1_1=[np.float64(-0.7042880292588848), np.float64(4.568957402391598e-07), np.float64(5.847764422519963e-07), np.float64(1.0771930205973022), np.float64(-0.6655135078692272), np.float64(-1.691698365969963e-07)]
params1_2=[np.float64(-0.37855723823411086), np.float64(0.0517534565767879), np.float64(0.3093178561786107), np.float64(-0.2098673136889269), np.float64(-0.7367062882237898), np.float64(0.3560407738416122), np.float64(-0.6129085759844084), np.float64(0.12092032786053153), np.float64(0.02810699572507496), np.float64(-1.3730600071936332), np.float64(0.6636570261721043), np.float64(-0.5148375536670442)]
params1_3=[np.float64(-0.5145989381280262), np.float64(0.07483776759960484), np.float64(-0.021444404559446954), np.float64(0.45461135332764874), np.float64(-0.8608340911701935), np.float64(0.45074878399517543), np.float64(-1.1994341750768271), np.float64(0.3141069001727883), np.float64(-0.1718607291624708), np.float64(-1.5969461851310724), np.float64(0.1927871316030451), np.float64(-0.036388331720064705), np.float64(0.3468127084696165), np.float64(0.02677505413816023), np.float64(-0.31471684198589966), np.float64(-0.06309356074033998), np.float64(0.34842189329482437), np.float64(-0.416132156412463)]
params1_4=[np.float64(-0.4764223128478626), np.float64(-0.10145284312681438), np.float64(-0.7139489618249508), np.float64(0.4649829392924822), np.float64(-0.6772366966282868), np.float64(-0.2522124233115315), np.float64(-1.0377148399141543), np.float64(-0.4567426310287736), np.float64(-0.10430787153077237), np.float64(-1.32827908442422), np.float64(0.12444150180114509), np.float64(0.37124263367815735), np.float64(0.33477794183828846), np.float64(0.021946077477393636), np.float64(-0.28926514985663226), np.float64(-0.23180928831357386), np.float64(0.2809461488057336), np.float64(-0.3176763086058423), np.float64(-0.7497100547055177), np.float64(-0.2806285832098778), np.float64(-0.4153811354162605), np.float64(-0.17789126599777969), np.float64(-0.23296825561814055), np.float64(0.7253775934031405)]
params1_5=[np.float64(-0.3975050782896364), np.float64(-0.02288040690645901), np.float64(-0.4924282893576865), np.float64(-0.17255168855292394), np.float64(-0.30824051476478675), np.float64(-0.5534940626086429), np.float64(-0.9675330936198336), np.float64(-0.2803234242620611), np.float64(0.15295372360015877), np.float64(-1.2146957758239898), np.float64(-0.13853548739731622), np.float64(0.8407636049958183), np.float64(0.2775039913532824), np.float64(-0.002357014424744858), np.float64(-0.22527891078287238), np.float64(-0.17794529235447462), np.float64(-0.017238167328988422), np.float64(-0.16274750927394727), np.float64(-0.6489070755606621), np.float64(0.2231986217196997), np.float64(-1.48880738737338), np.float64(-1.884222650050031), np.float64(0.2252522255802275), np.float64(0.000979517244027797), np.float64(-0.6694819108001787), np.float64(0.24972620485688551), np.float64(0.6680413788098315), np.float64(0.2505518253808057), np.float64(0.010290479049616798), np.float64(0.5329603192787207)]
params1_7=[np.float64(-0.4750858509555939), np.float64(-0.08309613629213869), np.float64(-0.26385317963433375), np.float64(0.2771110128167931), np.float64(-0.5599759779562841), np.float64(-0.45270155231367637), np.float64(-1.0707920925655496), np.float64(-0.38809392256238956), np.float64(0.38523679154117246), np.float64(-0.865082466764812), np.float64(-0.2299297788036725), np.float64(0.7477004143727826), np.float64(0.2574392507564145), np.float64(-0.01868638445452023), np.float64(-0.18252647384111234), np.float64(-0.226370862516229), np.float64(-0.1045656457880758), np.float64(-0.022895208512061317), np.float64(-0.7789039598472315), np.float64(0.3474669939307603), np.float64(-1.5737936996571227), np.float64(-1.3684138416609546), np.float64(0.23895439659077428), np.float64(-0.16006712523025488), np.float64(-0.7547575856615522), np.float64(0.31982969740030726), np.float64(0.9424824176588453), np.float64(0.40675474845289744), np.float64(-0.044331816506180205), np.float64(0.2876384904176439), np.float64(-1.4515250547788487), np.float64(0.2029333046214056), np.float64(0.06565628926549362), np.float64(-0.3410555865022039), np.float64(0.24938798919801997), np.float64(-0.12678656050140813), np.float64(0.3338356615141433), np.float64(-0.05383080642726838), np.float64(0.1638590820847689), np.float64(-0.7678841255012984), np.float64(0.27145921237860987), np.float64(0.09469772372792923)]
params1_8=[np.float64(-0.4414919047525303), np.float64(-0.09039724002652984), np.float64(-0.283698445053175), np.float64(0.24175876779720587), np.float64(-0.5992479899019154), np.float64(-0.36565439126617866), np.float64(-1.0829581157114148), np.float64(-0.42646721817926453), np.float64(0.36358753971116287), np.float64(-0.8609737847245619), np.float64(-0.30122987575128984), np.float64(0.8893130045172475), np.float64(0.2502926924439254), np.float64(-0.016074548946125474), np.float64(-0.17534323050300613), np.float64(-0.2654137257006735), np.float64(-0.08266061906946941), np.float64(-0.019545987619465), np.float64(-0.7717717213862112), np.float64(0.3148082610062352), np.float64(-1.61523915158742), np.float64(-1.376012628594209), np.float64(0.32800054162354586), np.float64(-0.16324187889573794), np.float64(-0.7360168647479033), np.float64(0.3116749839747447), np.float64(1.0110607105360856), np.float64(0.37793014899819954), np.float64(-0.03313575396586794), np.float64(0.2647077436012146), np.float64(-1.3924848933176779), np.float64(0.08143730628761285), np.float64(0.10357840772268284), np.float64(-0.34180661975435556), np.float64(0.43416042713577263), np.float64(-0.14018675583092857), np.float64(0.3175897105698516), np.float64(-0.04937793629504618), np.float64(0.1461635151274783), np.float64(-0.7036607184026928), np.float64(0.2372637719834694), np.float64(0.04847886614282513), np.float64(-0.44849847037791507), np.float64(-0.25437717650470276), np.float64(-0.39224622567164624), np.float64(-0.238711463007887), np.float64(-0.01763856583242864), np.float64(-0.03279416145875986)]


params0_1=[np.float64(-0.7715786533004716), np.float64(-9.94287406310763e-07), np.float64(3.7899228081005916e-07), np.float64(-1.1444156093220095), np.float64(-0.781341769124789), np.float64(-1.5043649243658036e-07)]
params0_2=[np.float64(-1.0815819008750114), np.float64(1.0167845133752623e-07), np.float64(1.5607884852584996e-06), np.float64(-1.1985702697460228), np.float64(0.5459097078537106), np.float64(-8.100872613060996e-07), np.float64(-0.49033549522167136), np.float64(7.275628746190488e-07), np.float64(-8.542688586051296e-07), np.float64(-0.9669488127590934), np.float64(0.28086868621924854), np.float64(5.852734708900961e-07)]
params0_3=[np.float64(-1.208210049545828), np.float64(0.09468637263128143), np.float64(0.006227720101240338), np.float64(-1.1562315775539407), np.float64(0.41258642565842285), np.float64(-0.054797315439150306), np.float64(-0.652669615016018), np.float64(0.06710548172565953), np.float64(0.16776288321846372), np.float64(-1.4568773277286415), np.float64(0.41005958182232616), np.float64(0.17388889419680792), np.float64(-0.4506274191430864), np.float64(0.11598016693640062), np.float64(0.6757488908897674), np.float64(-0.6310920471243796), np.float64(0.07977802874462286), np.float64(-0.11543038226595545)]
params0_4=[np.float64(-1.5816267464263944), np.float64(0.2598614341055186), np.float64(-0.016227960514938092), np.float64(-1.1451080156498326), np.float64(0.1273843940884978), np.float64(-0.03972960068240425), np.float64(-0.939072596641701), np.float64(0.15574171095361294), np.float64(0.06442642577183755), np.float64(-1.185301765082583), np.float64(0.49598488827834214), np.float64(-0.06957831988780569), np.float64(-0.5197262533271068), np.float64(0.26238365167573546), np.float64(0.5879377527429356), np.float64(-0.3488598128941171), np.float64(-0.06793118939702243), np.float64(-0.017284156568003858), np.float64(-0.47606290546888613), np.float64(0.027486741308642336), np.float64(-0.020284336276898053), np.float64(-0.73192803874152), np.float64(0.27286742415556225), np.float64(0.0882855153934028)]
params0_5=[np.float64(-1.7183547868229003), np.float64(0.22658949845606402), np.float64(-0.01082828896981199), np.float64(-1.1578680255593614), np.float64(0.0887560293240198), np.float64(-0.018843148745492956), np.float64(-1.007219221479207), np.float64(0.11311851373467101), np.float64(0.009621597780540973), np.float64(-1.152172861815552), np.float64(0.44724493526356035), np.float64(-0.06840318709726094), np.float64(-0.5429519503807995), np.float64(0.16343601616042272), np.float64(0.6408081802110727), np.float64(-0.22121661349384142), np.float64(-0.11157908382646461), np.float64(0.03679848933313576), np.float64(-0.45231307816819555), np.float64(-0.009127029766208376), np.float64(0.0006812323047817533), np.float64(-0.6441949059374462), np.float64(0.2681586253039387), np.float64(-0.057264767118860964), np.float64(-0.5170851838613371), np.float64(-0.13872016572647336), np.float64(0.038897420914188525), np.float64(-0.6316580082433009), np.float64(0.0924837963238606), np.float64(0.06492498569335091)]
params0_6=[np.float64(-1.7221769956476094), np.float64(0.14972641307166773), np.float64(-0.005214530627800701), np.float64(-1.1626332649725455), np.float64(0.08938953120866812), np.float64(-0.012817948096138197), np.float64(-1.0095819437514282), np.float64(0.10028234383283993), np.float64(-0.003912463144352765), np.float64(-1.1396915104863552), np.float64(0.4323715059907284), np.float64(-0.08251341567662228), np.float64(-0.5824064153267005), np.float64(0.13177148588224852), np.float64(0.7413271149275448), np.float64(-0.21038791495968723), np.float64(-0.13701292603493387), np.float64(0.0064189173825366565), np.float64(-0.49383671013656044), np.float64(-0.02806401161803651), np.float64(0.06716925708896938), np.float64(-0.6793977807901034), np.float64(0.3071508961137962), np.float64(-0.0035646311345987206), np.float64(-0.5599786931647115), np.float64(-0.16927667510289623), np.float64(0.14435814786022258), np.float64(-0.6312335127672786), np.float64(0.07477309464080459), np.float64(0.0499624643000637), np.float64(-0.34254088615646333), np.float64(-0.020107524433700598), np.float64(-0.007001666603524885), np.float64(-0.5191956164208634), np.float64(0.01495639036278848), np.float64(-0.015696644601103833)]


params0=params0_5
params1=params1_8
#params1=params1_4
if sum(abs(fit_orbital-orb0))<1e-5:
    params_inits=params0
    print("Using params0")
else:
    params_inits=params1
k=50
initparams=[]
errors=[]
for i in range(k):
    params_init=params_inits+list(np.random.rand(4)-0.5)+[0,0]
    res=minimize(error_function,params_init,method='BFGS',options={'maxiter':100,"eps":1e-8})

    errors.append(error_function(res.x))
    initparams.append(params_init)
argmin=np.argmin(errors)
print("Best initial: %e"%errors[argmin])
best=initparams[argmin]
res=minimize(error_function,best,method='BFGS',options={'maxiter':50000,"eps":1e-8})
sol=res.x
print(error_function(sol))
print(list(sol))
plt.plot(grid,abs(fit_orbital),label='orbital')
plt.plot(grid,abs(gaussfunc(grid,sol)),label='gaussian')

plt.legend()
#plt.show()

print("Total amount of Gaussians: ",len(params0)//6+len(params1)//6)